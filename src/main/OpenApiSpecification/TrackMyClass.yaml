openapi: "3.0.3"
info:
  title: Track My Class API
  version: "1.0.0"
servers:
  - url: http://localhost:8080
paths:
  /student/missing:
    get:
      tags:
        - Missing
      operationId: getAllMissing
      summary: get all missing of all student for all course
      responses:
        '200':
          description: list of all missing
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MissingMatcher"

  /student/{std}/missing/course:
    get:
      tags:
        - Missing
      operationId: getStudentMissingByCourse
      description: "get all missing by student by course name with 
      possibilities to search by date or by the fact it's justified or not"
      summary: get all missing according to the course
      parameters:
        - $ref: "#/components/parameters/std"
        - $ref: "#/components/parameters/course_name"
        - $ref: "#/components/parameters/is_justified"
        - in: query
          required: false
          name: month_value
          description: this is the number of the month
          schema:
            type: integer
            example: 5
        - in: query
          required: false
          name: year
          description: this is the year in where we want to see the missing
          schema:
            type: integer
            example: 2024
      responses:
        '200':
          description: list of all missing by student by course according to filter params
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MissingMatcher"

  /student/{std}/missing:
    get:
      tags:
        - Missing
      description: "get missing of a particular student with 
      possibility to filter whether we want have justified or unjustified missing"
      summary: get all or filtered missing of a student according its justification status
      operationId: getStudentJustifiedOrNotMissing
      parameters:
        - $ref: "#/components/parameters/std"
        - $ref: "#/components/parameters/is_justified"
      responses:
        '200':
          description: list of all missing of a student filtered or not by the fact it's justified or not.
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/MissingMatcher"

  /student/{std}:
    get:
      tags:
        - Student
      summary: get all student general information by its id
      operationId: getStudentInfo
      parameters:
        - $ref: "#/components/parameters/std"
      responses:
        '200':
          description: all general information about the student
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Student"
    



components:
  parameters:
    std:
      in: path
      name: std
      required: true
      schema:
        type: string
        example: "STD23028"

    is_justified:
      in: query
      required: false
      name: is_justified
      description: parameter for filtering if we want to see justified missing or unjustified ones
      schema:
        type: string
        example: "yes"

    course_name:
      in: query
      name: course_name
      required: true
      schema:
        type: string
        example: "PROG2"
  schemas:
    User:
      type: object
      properties:
        userRef:
          type: string
          example: "STD23028"
        lastName:
          type: string
          example: "RAZAFINDRATELO"
        firstName:
          type: string
          example: "Abeg√†"
        email:
          type: string
          example: "hei.abega.2@gmail.com"
        phoneNumber:
          type: string
          example: "+261382269435"

    Student :
      type: object
      allOf:
        - $ref: "#/components/schemas/User"
        - properties:
            level:
              type: string
              enum:
                - "L1"
                - "L2"
                - "L3"
            group:
              type: string
              enum:
                - "J1"
                - "J2"
                - "H1"
                - "H2"
                - "G1"

    Teacher:
      type: object
      allOf:
        - $ref: "#/components/schemas/User"
        - properties:
            isAssistant:
              type: boolean

    Course :
      type: object
      properties:
        courseRef:
          type: string
          example: "L1-001"
          description: This is the id of the course apart from its name
        name:
          type: string
          example: "PROG2"
        credit:
          type: integer
          format: int32
          example: 6

    Attendance:
      type: object
      properties:
        commencement:
          type: string
          format: date-time
          description: "this is the commencement of the course 
          (date and hour of the beginning of the course)"
        termination:
          type: string
          format: date-time
          description: "this is the termination date (with hour) of the course"
        attendanceResponsible:
          $ref: "#/components/schemas/Teacher"
        course:
          $ref: "#/components/schemas/Course"

    Missing:
      type: object
      allOf:
        - $ref: "#/components/schemas/Attendance"
        - properties:
            isJustified:
              type: boolean
              description: tels whether the missing is justified or not

    MissingMatcher:
      type: object
      properties:
        student:
          $ref: "#/components/schemas/Student"
        missingList:
          type: array
          items:
            $ref: "#/components/schemas/Missing"

